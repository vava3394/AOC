import java.util.List;

public class Point {
    public int x;
    public int y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
}

public enum Pipe {
    NS, EW, NE, NW, SE, SW, Start, Empty
}

public enum Position {
    Top, Right, Bottom, Left
}

public class Map {
    private List<List<Pipe>> map;

    public Map(List<List<Pipe>> map) {
        this.map = map;
    }

    public List<Pipe> get(int index) {
        return map.get(index);
    }

    public int size() {
        return map.size();
    }
}

public class Main {
    public static void main(String[] args) {
        // Your code here
    }

    public static Point findStart(Map map) {
        Point start = null;

        for (int y = 0; y < map.size(); y++) {
            List<Pipe> line = map.get(y);
            for (int x = 0; x < line.size(); x++) {
                Pipe pipe = line.get(x);
                if (pipe == Pipe.Start) {
                    start = new Point(x, y);
                    break;
                }
            }
        }

        if (start == null) {
            throw new RuntimeException("No start found");
        }

        return start;
    }

    public static List<Point> findLoopStarts(Map map, Point start) {
        if (map.get(start.y).get(start.x) != Pipe.Start) {
            throw new RuntimeException("Start is not a start");
        }
    
        List<Point> loops = new ArrayList<>();
    
        Pipe top = map.get(start.y - 1).get(start.x);
        Pipe right = map.get(start.y).get(start.x + 1);
        Pipe bottom = map.get(start.y + 1).get(start.x);
        Pipe left = map.get(start.y).get(start.x - 1);
    
        if (top == Pipe.NS || top == Pipe.SE || top == Pipe.SW)
            loops.add(new Point(start.x, start.y - 1));
    
        if (right == Pipe.EW || right == Pipe.NW || right == Pipe.SW)
            loops.add(new Point(start.x + 1, start.y));
    
        if (bottom == Pipe.NS || bottom == Pipe.NE || bottom == Pipe.NW)
            loops.add(new Point(start.x, start.y + 1));
    
        if (left == Pipe.EW || left == Pipe.NE || left == Pipe.SE)
            loops.add(new Point(start.x - 1, start.y));
    
        return loops;
    }
    
    public static Position getPreviousPosition(Point previous, Point current) {
        if (previous.x == current.x && previous.y == current.y - 1) return Position.Top;
        if (previous.x == current.x && previous.y == current.y + 1) return Position.Bottom;
        if (previous.x == current.x - 1 && previous.y == current.y) return Position.Left;
        if (previous.x == current.x + 1 && previous.y == current.y) return Position.Right;
    
        throw new RuntimeException("No position found");
    }
    
    public static Position getNextPosition(Pipe dir, Position pos) {
        if (dir == Pipe.NS) {
            if (pos == Position.Top) return Position.Bottom;
            if (pos == Position.Bottom) return Position.Top;
        }
        if (dir == Pipe.EW) {
            if (pos == Position.Left) return Position.Right;
            if (pos == Position.Right) return Position.Left;
        }
        if (dir == Pipe.NE) {
            if (pos == Position.Top) return Position.Right;
            if (pos == Position.Right) return Position.Top;
        }
        if (dir == Pipe.NW) {
            if (pos == Position.Top) return Position.Left;
            if (pos == Position.Left) return Position.Top;
        }
        if (dir == Pipe.SE) {
            if (pos == Position.Bottom) return Position.Right;
            if (pos == Position.Right) return Position.Bottom;
        }
        if (dir == Pipe.SW) {
            if (pos == Position.Bottom) return Position.Left;
            if (pos == Position.Left) return Position.Bottom;
        }
    
        throw new RuntimeException("No next position found");
    }
    
    public static Point getNextPoint(Map map, Point current, Position pos) {
        if (pos == Position.Top) return new Point(current.x, current.y - 1);
        if (pos == Position.Right) return new Point(current.x + 1, current.y);
        if (pos == Position.Bottom) return new Point(current.x, current.y + 1);
        if (pos == Position.Left) return new Point(current.x - 1, current.y);
    
        throw new RuntimeException("No next point found");
    }
    
    public static Position getNextDirection(Map map, Point previous, Point current) {
        Pipe currentPipe = map.get(current.y).get(current.x);
    
        Position previousPos = getPreviousPosition(previous, current);
        if (previousPos == null) throw new RuntimeException("No position found");
    
        if (currentPipe == Pipe.Empty) return null;
    
        Position nextPos = getNextPosition(currentPipe, previousPos);
        if (nextPos == null) throw new RuntimeException("No next position found");
    
        return nextPos;
    }
    
    public static Point getNext(Map map, Point previous, Point current) {
        Position nextPos = getNextDirection(map, previous, current);
        Point nextPoint = getNextPoint(map, current, nextPos);
    
        return nextPoint;
    }    

}